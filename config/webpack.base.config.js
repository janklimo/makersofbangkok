var webpack = require('webpack');
var path = require('path');

/*
 *  see http://webpack.github.io/docs/configuration.html
 *  for webpack configuration options
 */
module.exports = {
  // enable source-maps
  devtool: 'source-map',

  // needed "stub" out these modules requried by Joi
  node: {
    net: "empty",
    fs: "empty",
    dns: "empty"
  },

  // 'context' sets the directory where webpack looks
  // for module files you list in your 'require' statements
  context: path.join(__dirname, '..', '/app/webpack_javascripts'),

  // 'entry' specifies the entry point, where webpack starts reading all
  // dependencies listed and bundling them into the output file.
  entry: {
    vendor: [
      'react'
      // 'flux',
      // 'immutable'
    ],
    app: [
      './makersofbangkok/app.js'
    ]
  },

  // 'output' specifies the filepath for saving the bundled output generated by
  //  wepback.  It is an object with options, and you can interpolate the name
  //  of the entry file using '[name]' in the filename. You will want to add
  //  the bundled filename to your '.gitignore'.
  output: {
    filename: '[name]_wp_bundle.js',
    // We want to save the bundle in the Asset Pipleine directory
    path: path.join(__dirname, '..', '/app/assets/javascripts')
  },

  externals: {
    // require("jquery") is external and available on the global var jQuery
    "jquery": "jQuery"
  },

  plugins: [
    new webpack.optimize.CommonsChunkPlugin('vendor', 'vendor_wp_bundle.js')
    // do not stop if linting errors are found
    // new webpack.NoErrorsPlugin()
  ],

  resolve: {
    extensions: ['', '.js', '.jsx']
  },

  // The 'module' and 'loaders' options tell webpack to use loaders.
  // See http://webpack.github.io/docs/using-loaders.html
  module: {
    loaders: [
      {
        test: /\.jsx?$/,
        loaders: ['babel-loader', 'eslint'],
        exclude: /node_modules/
      }
    ]
  }
};
